// Copyright (c) 2011, David J. Pearce (djp@ecs.vuw.ac.nz)
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//    * Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//    * Neither the name of the <organization> nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL DAVID J. PEARCE BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

package wyjc.transforms;

import java.io.FileOutputStream;
import java.io.IOException;

import wyil.ModuleLoader;
import wyil.Transform;
import wyil.lang.Module;
import wyjc.io.ClassFileBuilder;
import wyjvm.io.BytecodeFileWriter;
import wyjvm.lang.ClassFile;
import wyjvm.util.ActorGeneration;
import wyjvm.util.DeadCodeElimination;
import wyjvm.util.Validation;

public class JvmBytecodeWriter implements Transform {
	private ClassFileBuilder classBuilder;
	private final boolean validate = true;
	private final boolean deadCode = true;
	private final boolean actors = true;
	
	public JvmBytecodeWriter(ModuleLoader loader) {
		classBuilder = new ClassFileBuilder(loader, wyjc.Main.MAJOR_VERSION,
				wyjc.Main.MINOR_VERSION);
	}
	
	public Module apply(Module m) throws IOException {	
		ClassFile file = classBuilder.build(m);				
		
		if(validate) {
			// validate generated bytecode
			new Validation().apply(file);
		}
		if(deadCode) {
			// eliminate any dead code that was introduced.		
			new DeadCodeElimination().apply(file);
		}
		if (actors) {
			// generate the continuations for actors.
			new ActorGeneration().apply(file);
		}
		
		// calculate filename
		String filename = m.filename().replace(".whiley", ".jvm");		
		FileOutputStream out = new FileOutputStream(filename);
		BytecodeFileWriter writer = new BytecodeFileWriter(out,null);
		writer.write(file);
		out.flush();

		return m;
	}	
	
}
